workflows:
  ios_capacitor_testflight:
    name: iOS • Capacitor • TestFlight
    max_build_duration: 60

    environment:
      xcode: 15.4
      node: 18
      cocoapods: default
      vars:
        TEAM_ID: W3Z5SH3P38
        BUNDLE_ID: com.kfd.panel
        APP_STORE_APP_ID: "6751201247"
        # Apple API değerleri ENV'den gelecek:
        # APP_STORE_CONNECT_ISSUER_ID
        # APP_STORE_CONNECT_KEY_IDENTIFIER
        # APP_STORE_CONNECT_PRIVATE_KEY

    triggering:
      events: [push]
      branch_patterns:
        - pattern: "main"
          include: true
          source: true

    scripts:
      - name: ENV sanity check
        script: |
          set -eo pipefail
          echo "ENV sanity check:"
          [ -n "$APP_STORE_CONNECT_ISSUER_ID" ] && echo "✓ ISSUER_ID OK" || (echo "✗ ISSUER_ID MISSING"; exit 1)
          [ -n "$APP_STORE_CONNECT_KEY_IDENTIFIER" ] && echo "✓ KEY_ID OK ($APP_STORE_CONNECT_KEY_IDENTIFIER)" || (echo "✗ KEY_ID MISSING"; exit 1)
          if [ -z "$APP_STORE_CONNECT_PRIVATE_KEY" ]; then echo "✗ PRIVATE_KEY MISSING"; exit 1; else echo "✓ PRIVATE_KEY set"; fi

      - name: Install deps
        script: npm ci || npm install

      - name: Web build
        script: |
          npm run build || true
          [ -d "dist-app" ] || echo "⚠️ dist-app eksik; webDir ile build çıktısını eşitleyin."

      - name: Capacitor sync
        script: npx cap sync ios

      - name: Cocoapods
        script: |
          cd ios/App
          pod repo update
          pod install
          cd ../..

      - name: ExportOptions.plist
        script: |
          cat > ios/ExportOptions.plist <<'PLIST'
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
            <key>method</key><string>app-store</string>
            <key>signingStyle</key><string>automatic</string>
            <key>compileBitcode</key><false/>
            <key>uploadSymbols</key><true/>
          </dict>
          </plist>
          PLIST

      - name: Apple signing files (automatic)
        script: |
          set -eo pipefail
          app-store-connect fetch-signing-files "$BUNDLE_ID" \
            --type IOS_APP_STORE --create \
            --issuer-id "$APP_STORE_CONNECT_ISSUER_ID" \
            --key-id "$APP_STORE_CONNECT_KEY_IDENTIFIER" \
            --private-key "$APP_STORE_CONNECT_PRIVATE_KEY" \
            --save-to ./certs
          keychain initialize
          keychain add-certificates --certificate ./certs/certificate.p12 --certificate-password ""
          xcode-project use-profiles

      - name: Unique build number
        script: |
          export BUILD_NUMBER=$(date +%Y%m%d%H%M)
          echo "BUILD_NUMBER=$BUILD_NUMBER" >> $CM_ENV
          echo "Using BUILD_NUMBER=$BUILD_NUMBER"

      - name: Build IPA
        script: |
          set -eo pipefail
          cd ios/App
          xcodebuild -workspace App.xcworkspace \
            -scheme App -configuration Release \
            -archivePath $CM_BUILD_DIR/build/App.xcarchive \
            DEVELOPMENT_TEAM=$TEAM_ID \
            PRODUCT_BUNDLE_IDENTIFIER=$BUNDLE_ID \
            clean archive | xcpretty
          xcodebuild -exportArchive \
            -archivePath $CM_BUILD_DIR/build/App.xcarchive \
            -exportPath $CM_BUILD_DIR/build/ios \
            -exportOptionsPlist ../ExportOptions.plist | xcpretty
          cd ../..

        scripts:
          - name: Show IPA
            script: find build/ios -name "*.ipa" -print

          - name: Upload to TestFlight (API Key ile)
            script: |
              set -eo pipefail
              mkdir -p $HOME/.appstoreconnect/private_keys
              KEYFILE="$HOME/.appstoreconnect/private_keys/AuthKey_${APP_STORE_CONNECT_KEY_IDENTIFIER}.p8"
              printf "%s" "$APP_STORE_CONNECT_PRIVATE_KEY" > "$KEYFILE"

              IPA_PATH=$(find "$CM_BUILD_DIR/build/ios" -name "*.ipa" | head -n 1)
              echo "IPA: $IPA_PATH"

              xcrun altool --upload-app \
                -f "$IPA_PATH" \
                -t ios \
                --apiKey "$APP_STORE_CONNECT_KEY_IDENTIFIER" \
                --apiIssuer "$APP_STORE_CONNECT_ISSUER_ID" \
                --verbose

        artifacts:
          - "build/ios/*.ipa"
          - "build/App.xcarchive"
